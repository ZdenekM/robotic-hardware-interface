== Popis komunikace mezi PC a MainMod ==

PC posílá povely k jízdě přímo (požadovaná vzdálenost), nebo povel k otočení (požadovaný úhel otočení). Modul MainMod potom zajišťuje provedení těchto příkazů (kontroluje ujetou vzdálenost atd.).


=== Volná jízda ===

Tento typ paketu slouží zejména pro ovládání robotu joystickem a tedy pro libovolný (volný) pohyb.

||PC_FREE_RIDE||speedl||speedr||

  * speedl ... požadovaná rychlost pro levé motory (s2)
  * speedr ... požadovaná rychlost pro pravé motory (s2)

MainMod na tento paket neodpovídá.

=== Jízda rovně ===

PC pošle modulu MainMod paket typu PC_MOVE_STRAIGHT, požadovanou vzdálenost v mm.

||PC_MOVE_STRAIGHT||dist||

  * dist ... požadovaná vzdálenost (s2)

MainMod na tento paket neodpovídá.

=== Otočení o zadaný úhel ===

PC pošle paket s hodnotou požadovaného úhlu otočení - libovolné číslo v intevalu <-3600;3600>.

||PC_MOVE_ROUND||angle||

  * angle ... požadovaný úhel otočení (s2)

MainMod na tento paket neodpovídá - PC musí zkontrolovat úspěšnost provedení požadované operace podle informací ze senzorů.

=== Vyčtení údajů o pohybu a stavu motorů ===

Na paket typu PC_MOVE_INFO odpoví MainMod paketem téhož typu s následujícím obsahem:

||PC_MOVE_INFO||rspeedl||aspeedl||distl||rspeedr||aspeedr||distr||

  * rspeedx ... žádaná rychlost (s2)
  * aspeedx ... aktuální rychlost (s2)
  * distx ... ujetá vzdálenost (s4)

Celkem tedy 16 bytů. Hodnota pro určitou stranu je vždy aritmetickým průměrem údajů z předního a zadního motoru.

=== Čtení / nastavení PID konstant ===

Nastavení se provede zasláním paketu P_MOTOR_SETPID. Kvůli vyhnutí se počítání s desetinnými čísly v mikroprocesoru je třeba hodnoty konstant násobit deseti.

||P_MOTOR_SETPID||p||i||d||

  * p ... proporcionální člen (u1)
  * i ... integrační člen (u1)
  * d ... derivační člen (u1)

Zjištění nastavených PID konstant se provede pomocí paketu P_MOTOR_GETPID.

=== Vyčtení údajů ze senzorů překážek ===

Během jízdy se ultrazvuk na servu neotáčí, měří se tedy vzdálenost k překážce přímo před robotem. Plný "sken" okolí se provede na požádání. Měření pomocí infračervených senzorů probíhá neustále. Chyba při měření je vždy indikována nulovou hodnotou. Všechny vzdálenosti jsou v milimetrech.

Popis jednotlivých paketů:

||P_SENS_FAST||us_dist||sharp1||sharp2||sharp3||sharp4||tact||comp||

  * us_dist ... vzdálenost k překážce změřená ultrazvukem (u2)
  * sharp1 ... levý přední Sharp (u2)
  * sharp2 ... pravý přední Sharp (u2)
  * sharp3 ... levý zadní Sharp (u2)
  * sharp4 ... pravý zadní Sharp (u2)
  * tact ... taktilní (dotekové) senzory (u1)
  * comp ... údaj z kompasu (u2)

Pozn: Taktilní senzory nejsou prozatím využity, byte je vždy nulový. Údaj z kompasu může nabývat hodnot z intervalu <0;3599>.

||P_SENS_FULL||us_dist_0||us_dist_45||us_dist_90||us_dist_135||us_dist_180||

  * us_dist_x ... vzdálenost k překážce pod úhlem x˚ (u2)

Pozn: PC pošle prázdný paket typu P_SENS_FULL na který modul neodpovídá, ale spustí měření. Poté může PC posílat libovolné jiné pakety a komunikace probíhá normálně. Po dalším zaslání paketu P_SENS_FULL obdrží výsledky měření. Měření trvá cca 3 sekundy.